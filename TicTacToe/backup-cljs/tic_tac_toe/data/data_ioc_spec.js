// Compiled by ClojureScript 1.11.132 {:optimizations :none}
goog.provide('tic_tac_toe.data.data_ioc_spec');
goog.require('cljs.core');
goog.require('speclj.core');
goog.require('tic_tac_toe.data.data_ioc');
tic_tac_toe.data.data_ioc_spec.clj_state1 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"game-over?","game-over?",432859304),true,new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"3x3","3x3",570362544),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813),"O",new cljs.core.Keyword(null,"human","human",-772334390),new cljs.core.Keyword(null,"move-order","move-order",-792510441),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1),(3),(4),(6)], null),"X",new cljs.core.Keyword(null,"human","human",-772334390),new cljs.core.Keyword(null,"board","board",-1907017633),cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(2),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(5),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,(7),null,(1),null)),(new cljs.core.List(null,(8),null,(1),null)))))], null);
tic_tac_toe.data.data_ioc_spec.clj_state2 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false,new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"4x4","4x4",121507723),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309),"O",new cljs.core.Keyword(null,"hard","hard",2068420191),new cljs.core.Keyword(null,"move-order","move-order",-792510441),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6),(4),(1),(3),(0)], null),"X",new cljs.core.Keyword(null,"easy","easy",315769928),new cljs.core.Keyword(null,"board","board",-1907017633),cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(2),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(5),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,(7),null,(1),null)),(new cljs.core.List(null,(8),null,(1),null)))))], null);
tic_tac_toe.data.data_ioc_spec.clj_state3 = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false,new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"3x3","3x3",570362544),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813),"O",new cljs.core.Keyword(null,"easy","easy",315769928),new cljs.core.Keyword(null,"move-order","move-order",-792510441),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6),(4),(1),(3),(0)], null),"X",new cljs.core.Keyword(null,"easy","easy",315769928),new cljs.core.Keyword(null,"board","board",-1907017633),cljs.core.sequence.call(null,cljs.core.seq.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(2),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,"O",null,(1),null)),(new cljs.core.List(null,(5),null,(1),null)),(new cljs.core.List(null,"X",null,(1),null)),(new cljs.core.List(null,(7),null,(1),null)),(new cljs.core.List(null,(8),null,(1),null)))))], null);
tic_tac_toe.data.data_ioc_spec.default_data = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1)),cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2))], null);
tic_tac_toe.data.data_ioc_spec.data_store_specs = (function tic_tac_toe$data$data_ioc_spec$data_store_specs(){
return speclj.core.context.call(null,"data store",speclj.core.context.call(null,"read-data",speclj.core.it.call(null,"returns data stored in the <data>",speclj.core.should_EQ_.call(null,tic_tac_toe.data.data_ioc_spec.default_data,tic_tac_toe.data.data_ioc.read_db.call(null)))),speclj.core.context.call(null,"write-data",speclj.core.it.call(null,"writes to the <data>",tic_tac_toe.data.data_ioc.write_db.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1))], null)),speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1))], null),tic_tac_toe.data.data_ioc.read_db.call(null)),tic_tac_toe.data.data_ioc.write_db.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(1))], null)),speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(1))], null),tic_tac_toe.data.data_ioc.read_db.call(null)))),speclj.core.context.call(null,"get-last",speclj.core.it.call(null,"returns the last map in the <data>",speclj.core.should_EQ_.call(null,cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2)),tic_tac_toe.data.data_ioc.pull_last_db.call(null))),speclj.core.it.call(null,"returns nil if <data> is empty",tic_tac_toe.data.data_ioc.write_db.call(null,cljs.core.PersistentVector.EMPTY),speclj.core.should_not.call(null,tic_tac_toe.data.data_ioc.pull_last_db.call(null)))),speclj.core.context.call(null,"get-new-id",speclj.core.it.call(null,"returns an id incremented by 1 from the last id",speclj.core.should_EQ_.call(null,(3),tic_tac_toe.data.data_ioc.__GT_new_id.call(null))),speclj.core.it.call(null,"returns 1 if the edn vector is empty",tic_tac_toe.data.data_ioc.write_db.call(null,cljs.core.PersistentVector.EMPTY),speclj.core.should_EQ_.call(null,(1),tic_tac_toe.data.data_ioc.__GT_new_id.call(null)))),speclj.core.context.call(null,"add-db",speclj.core.it.call(null,"adds content to end of data vector with new id",tic_tac_toe.data.data_ioc.add_db.call(null,tic_tac_toe.data.data_ioc_spec.clj_state3),speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1)),cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2)),cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state3,new cljs.core.Keyword(null,"id","id",-1388402092),(3))], null),tic_tac_toe.data.data_ioc.read_db.call(null))),speclj.core.it.call(null,"retains content when adding",tic_tac_toe.data.data_ioc.write_db.call(null,cljs.core.PersistentVector.EMPTY),tic_tac_toe.data.data_ioc.add_db.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1),speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1))], null),tic_tac_toe.data.data_ioc.read_db.call(null)))),speclj.core.context.call(null,"update-last",speclj.core.it.call(null,"replaces last with content and retains id",tic_tac_toe.data.data_ioc.update_db.call(null,cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2))),speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1)),cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2))], null),tic_tac_toe.data.data_ioc.read_db.call(null)),(function (){var updated_state = cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state2,new cljs.core.Keyword(null,"id","id",-1388402092),(2),new cljs.core.Keyword(null,"game-over?","game-over?",432859304),true);
tic_tac_toe.data.data_ioc.update_db.call(null,updated_state);

return speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null,tic_tac_toe.data.data_ioc_spec.clj_state1,new cljs.core.Keyword(null,"id","id",-1388402092),(1)),updated_state], null),tic_tac_toe.data.data_ioc.read_db.call(null));
})())));
});
speclj.core.describe.call(null,"Memory-IO",speclj.core.redefs_around.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tic_tac_toe.data.data_ioc.data_store,cljs.core.atom.call(null,new cljs.core.Keyword(null,"memory","memory",-1449401430))], null)),speclj.core.before.call(null,cljs.core.reset_BANG_.call(null,tic_tac_toe.data.data_ioc.memory,tic_tac_toe.data.data_ioc_spec.default_data)),tic_tac_toe.data.data_ioc_spec.data_store_specs.call(null));

//# sourceMappingURL=data_ioc_spec.js.map
