// Compiled by ClojureScript 1.11.132 {:optimizations :none}
goog.provide('tic_tac_toe.printablesc_spec');
goog.require('cljs.core');
goog.require('speclj.core');
goog.require('tic_tac_toe.printablesc');
goog.require('tic_tac_toe.spec_helperc');
speclj.core.describe.call(null,"printables",speclj.core.with_stubs.call(null),speclj.core.context.call(null,"print-board",speclj.core.it.call(null,"prints the board with correct values incremented by 1",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["  1  |  2  |  3  ","  4  |  5  |  6  ","  7  |  8  |  9  "], null),tic_tac_toe.printablesc.get_board_printables.call(null,cljs.core.range.call(null,(9))))),speclj.core.it.call(null,"player tokens aren't effected by incrementation",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["  1  |  2  |  3  ","  4  |  X  |  6  ","  7  |  8  |  9  "], null),tic_tac_toe.printablesc.get_board_printables.call(null,tic_tac_toe.spec_helperc.populate_board.call(null,"X",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4)], null),cljs.core.range.call(null,(9)))))),speclj.core.it.call(null,"prints a 4 x 4 board",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["  1  |  2  |  3  |  4  ","  5  |  6  |  7  |  8  ","  9  |  10 |  11 |  12 ","  13 |  14 |  15 |  16 "], null),tic_tac_toe.printablesc.get_board_printables.call(null,cljs.core.range.call(null,(16))))),speclj.core.it.call(null,"prints a 3x3x3 board",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["  1  |  2  |  3    10 |  11 |  12   19 |  20 |  21 ","  4  |  5  |  6    13 |  14 |  15   22 |  23 |  24 ","  7  |  8  |  9    16 |  17 |  18   25 |  26 |  27 "], null),tic_tac_toe.printablesc.get_board_printables.call(null,cljs.core.range.call(null,(27)))))),speclj.core.context.call(null,"get-board-size-menu",speclj.core.it.call(null,"returns correct menu for :tui",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What size board?","1. 3x3","2. 4x4","3. 3x3x3 (3-D)"], null),tic_tac_toe.printablesc.get_board_size_menu.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309)], null)))),speclj.core.it.call(null,"returns correct menu for :gui",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["What size board?","1. 3x3","2. 4x4"], null),tic_tac_toe.printablesc.get_board_size_menu.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813)], null))))),speclj.core.context.call(null,"get-winner-printable",speclj.core.it.call(null,"returns X wins!",speclj.core.should_EQ_.call(null,"X wins!",tic_tac_toe.printablesc.get_winner_printable.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","X","X",(3),(4),(5),(6),(7),(8)], null)], null)))),speclj.core.it.call(null,"returns O wins!",speclj.core.should_EQ_.call(null,"O wins!",tic_tac_toe.printablesc.get_winner_printable.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O","O","O",(3),(4),(5),(6),(7),(8)], null)], null)))),speclj.core.it.call(null,"returns Draw",speclj.core.should_EQ_.call(null,"Draw",tic_tac_toe.printablesc.get_winner_printable.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["O","O","X","X","X","O","O","X","X"], null)], null))))),speclj.core.context.call(null,"get-game-over-printable",speclj.core.it.call(null,"prints the correct message",speclj.core.should_EQ_.call(null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),tic_tac_toe.printablesc.get_game_over_printable.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","X","X",(3),(4),(5),(6),(7),(8)], null)], null))))));

//# sourceMappingURL=printablesc_spec.js.map
