// Compiled by ClojureScript 1.11.132 {:optimizations :none}
goog.provide('tic_tac_toe.state_initializerc_spec');
goog.require('cljs.core');
goog.require('speclj.core');
goog.require('tic_tac_toe.data.data_ioc');
goog.require('tic_tac_toe.printablesc');
goog.require('tic_tac_toe.state_initializerc');
tic_tac_toe.state_initializerc_spec.game0 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"game-over?","game-over?",432859304),new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.Keyword(null,"end-game?","end-game?",-146020529),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"id","id",-1388402092),"O",new cljs.core.Keyword(null,"menu?","menu?",847361238),new cljs.core.Keyword(null,"move-order","move-order",-792510441),"X",new cljs.core.Keyword(null,"board","board",-1907017633)],[true,new cljs.core.Keyword(null,"3x3","3x3",570362544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),false,new cljs.core.Keyword(null,"gui","gui",604532813),(0),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"human","human",-772334390)], null),true,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1),(3),(4),(6)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"human","human",-772334390)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","O",(2),"X","O",(5),"X",(7),(8)], null)]);
tic_tac_toe.state_initializerc_spec.game1 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"game-over?","game-over?",432859304),new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.Keyword(null,"end-game?","end-game?",-146020529),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"id","id",-1388402092),"O",new cljs.core.Keyword(null,"menu?","menu?",847361238),new cljs.core.Keyword(null,"move-order","move-order",-792510441),"X",new cljs.core.Keyword(null,"board","board",-1907017633)],[true,new cljs.core.Keyword(null,"3x3","3x3",570362544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),false,new cljs.core.Keyword(null,"gui","gui",604532813),(1),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"easy","easy",315769928)], null),true,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(5),(4),(2),(8),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"human","human",-772334390)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","O","O",(3),"X","O",(6),(7),"X"], null)]);
tic_tac_toe.state_initializerc_spec.game2 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"game-over?","game-over?",432859304),new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.Keyword(null,"end-game?","end-game?",-146020529),new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"id","id",-1388402092),"O",new cljs.core.Keyword(null,"menu?","menu?",847361238),new cljs.core.Keyword(null,"move-order","move-order",-792510441),"X",new cljs.core.Keyword(null,"board","board",-1907017633)],[true,new cljs.core.Keyword(null,"3x3","3x3",570362544),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X wins!","","Play Again?","1. Yes","2. No"], null),false,new cljs.core.Keyword(null,"gui","gui",604532813),(2),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"human","human",-772334390)], null),true,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(4),(1),(3),(2)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"human","human",-772334390)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","X","X","O","O",(5),(6),(7),(8)], null)]);
tic_tac_toe.state_initializerc_spec.default_data = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tic_tac_toe.state_initializerc_spec.game0,tic_tac_toe.state_initializerc_spec.game1,tic_tac_toe.state_initializerc_spec.game2], null);
speclj.core.describe.call(null,"state initializer",speclj.core.with_stubs.call(null),speclj.core.before.call(null,tic_tac_toe.data.data_ioc.write_db.call(null,tic_tac_toe.state_initializerc_spec.default_data)),speclj.core.context.call(null,"retrieve-game",speclj.core.it.call(null,"finds the game with the matching id of 0",speclj.core.should_EQ_.call(null,tic_tac_toe.state_initializerc_spec.game0,tic_tac_toe.state_initializerc.retrieve_game.call(null,(0)))),speclj.core.it.call(null,"finds the game with the matching id of 1",speclj.core.should_EQ_.call(null,tic_tac_toe.state_initializerc_spec.game1,tic_tac_toe.state_initializerc.retrieve_game.call(null,(1))))),speclj.core.context.call(null,"initialize-data",speclj.core.it.call(null,"scrubs non-essential data and generates new board for game 0",speclj.core.should_EQ_.call(null,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"game-over?","game-over?",432859304),new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.Keyword(null,"replay-moves","replay-moves",1560924210),new cljs.core.Keyword(null,"ui","ui",-469653645),"O",new cljs.core.Keyword(null,"move-order","move-order",-792510441),"X",new cljs.core.Keyword(null,"board","board",-1907017633)],[false,new cljs.core.Keyword(null,"3x3","3x3",570362544),tic_tac_toe.printablesc.get_move_printables.call(null,cljs.core.range.call(null,(9))),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1),(3),(4),(6)], null),new cljs.core.Keyword(null,"gui","gui",604532813),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"replay","replay",-681122389)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"replay","replay",-681122389)], null),cljs.core.range.call(null,(9))]),tic_tac_toe.state_initializerc.initialize_replay.call(null,(0)))),speclj.core.it.call(null,"scrubs non-essential data and generates new board for game 1",speclj.core.should_EQ_.call(null,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"game-over?","game-over?",432859304),new cljs.core.Keyword(null,"board-size","board-size",140730505),new cljs.core.Keyword(null,"printables","printables",1718670765),new cljs.core.Keyword(null,"replay-moves","replay-moves",1560924210),new cljs.core.Keyword(null,"ui","ui",-469653645),"O",new cljs.core.Keyword(null,"move-order","move-order",-792510441),"X",new cljs.core.Keyword(null,"board","board",-1907017633)],[false,new cljs.core.Keyword(null,"3x3","3x3",570362544),tic_tac_toe.printablesc.get_move_printables.call(null,cljs.core.range.call(null,(9))),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(5),(4),(2),(8),(1)], null),new cljs.core.Keyword(null,"gui","gui",604532813),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"replay","replay",-681122389)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move","move",-2110884309),new cljs.core.Keyword(null,"replay","replay",-681122389)], null),cljs.core.range.call(null,(9))]),tic_tac_toe.state_initializerc.initialize_replay.call(null,(1))))),speclj.core.context.call(null,"->initial-state",speclj.core.it.call(null,"invokes initialize-data with id if :replay? true",(function (){var initialize_replay_orig_val__7372 = tic_tac_toe.state_initializerc.initialize_replay;
var initialize_replay_temp_val__7373 = speclj.core.stub.call(null,new cljs.core.Keyword(null,"initialize","initialize",609952913));
(tic_tac_toe.state_initializerc.initialize_replay = initialize_replay_temp_val__7373);

try{tic_tac_toe.state_initializerc.__GT_initial_state.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"replay?","replay?",1482446367),true,new cljs.core.Keyword(null,"id","id",-1388402092),(1)], null));

return speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"initialize","initialize",609952913),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"with","with",-1536296876),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1)], null)], null));
}finally {(tic_tac_toe.state_initializerc.initialize_replay = initialize_replay_orig_val__7372);
}})()),speclj.core.it.call(null,"invokes handle-last-game if no :replay?",(function (){var pull_last_db_orig_val__7374 = tic_tac_toe.data.data_ioc.pull_last_db;
var pull_last_db_temp_val__7375 = speclj.core.stub.call(null,new cljs.core.Keyword(null,"pull","pull",-860544805));
(tic_tac_toe.data.data_ioc.pull_last_db = pull_last_db_temp_val__7375);

try{tic_tac_toe.state_initializerc.__GT_initial_state.call(null,cljs.core.PersistentArrayMap.EMPTY);

return speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"pull","pull",-860544805));
}finally {(tic_tac_toe.data.data_ioc.pull_last_db = pull_last_db_orig_val__7374);
}})()),speclj.core.it.call(null,"assigns previous game printables if last-game unfinished",(function (){var last_game = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"id","id",-1388402092),(1),new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X",(1),(2),(3),(4),(5),(6),(7),(8)], null),new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false], null);
var result_state = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309),new cljs.core.Keyword(null,"printables","printables",1718670765),tic_tac_toe.printablesc.continue_printables,new cljs.core.Keyword(null,"last-game","last-game",1547493148),last_game,new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false], null);
tic_tac_toe.data.data_ioc.write_db.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [last_game], null));

return speclj.core.should_EQ_.call(null,result_state,tic_tac_toe.state_initializerc.__GT_initial_state.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309)], null)));
})()),speclj.core.it.call(null,"assigns player-x printables if last-game was finished",(function (){var last_game = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"id","id",-1388402092),(1),new cljs.core.Keyword(null,"board","board",-1907017633),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X","X","X",(3),(4),(5),(6),(7),(8)], null),new cljs.core.Keyword(null,"game-over?","game-over?",432859304),true], null);
var result_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309),new cljs.core.Keyword(null,"printables","printables",1718670765),tic_tac_toe.printablesc.player_x_printables,new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false], null);
tic_tac_toe.data.data_ioc.write_db.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [last_game], null));

return speclj.core.should_EQ_.call(null,result_state,tic_tac_toe.state_initializerc.__GT_initial_state.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309)], null)));
})()),speclj.core.it.call(null,"assigns player-x printables if no last game",(function (){var result_state = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309),new cljs.core.Keyword(null,"printables","printables",1718670765),tic_tac_toe.printablesc.player_x_printables,new cljs.core.Keyword(null,"game-over?","game-over?",432859304),false], null);
tic_tac_toe.data.data_ioc.write_db.call(null,cljs.core.PersistentVector.EMPTY);

return speclj.core.should_EQ_.call(null,result_state,tic_tac_toe.state_initializerc.__GT_initial_state.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309)], null)));
})())),speclj.core.context.call(null,"contains-ui?",speclj.core.it.call(null,"returns nil if it doesn't contain anything",speclj.core.should_not.call(null,tic_tac_toe.state_initializerc.contains_ui_QMARK_.call(null,cljs.core.PersistentVector.EMPTY))),speclj.core.it.call(null,"returns true if it contains --tui",speclj.core.should.call(null,tic_tac_toe.state_initializerc.contains_ui_QMARK_.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--tui"], null)))),speclj.core.it.call(null,"returns true if it contains --gui",speclj.core.should.call(null,tic_tac_toe.state_initializerc.contains_ui_QMARK_.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--gui"], null))))),speclj.core.context.call(null,"parse-args",speclj.core.redefs_around.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tic_tac_toe.state_initializerc.__GT_initial_state,speclj.core.stub.call(null,new cljs.core.Keyword(null,"initial-state","initial-state",-2021616806))], null)),speclj.core.after.call(null,cljs.core.reset_BANG_.call(null,tic_tac_toe.data.data_ioc.data_store,new cljs.core.Keyword(null,"memory","memory",-1449401430))),speclj.core.it.call(null,"returns adds tui if --tui flag",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--tui"], null)),speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"initial-state","initial-state",-2021616806),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"with","with",-1536296876),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"tui","tui",-1217057309)], null)], null)], null))),speclj.core.it.call(null,"returns gui if --gui flag",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--gui"], null)),speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"initial-state","initial-state",-2021616806),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"with","with",-1536296876),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813)], null)], null)], null))),speclj.core.it.call(null,"returns replay true and id of 1",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--gui","--game","1"], null)),speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"initial-state","initial-state",-2021616806),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"with","with",-1536296876),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813),new cljs.core.Keyword(null,"replay?","replay?",1482446367),true,new cljs.core.Keyword(null,"id","id",-1388402092),(1)], null)], null)], null))),speclj.core.it.call(null,"returns replay true and id of 2",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--gui","--game","2"], null)),speclj.core.should_have_invoked.call(null,new cljs.core.Keyword(null,"initial-state","initial-state",-2021616806),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"with","with",-1536296876),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"ui","ui",-469653645),new cljs.core.Keyword(null,"gui","gui",604532813),new cljs.core.Keyword(null,"replay?","replay?",1482446367),true,new cljs.core.Keyword(null,"id","id",-1388402092),(2)], null)], null)], null))),speclj.core.it.call(null,"throws an error if argument after game isn't a number",speclj.core.should_throw.call(null,tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--tui","--game","four"], null)))),speclj.core.it.call(null,"throws an error if no number after game",speclj.core.should_throw.call(null,tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--tui","--game"], null)))),speclj.core.it.call(null,"updates data-store to :edn if --edndb flag",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--edndb","--tui"], null)),speclj.core.should_EQ_.call(null,new cljs.core.Keyword(null,"edn","edn",1317840885),cljs.core.deref.call(null,tic_tac_toe.data.data_ioc.data_store))),speclj.core.it.call(null,"updates data-store to :psql if --sqldb flag",tic_tac_toe.state_initializerc.parse_args.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["--sqldb","--tui"], null)),speclj.core.should_EQ_.call(null,new cljs.core.Keyword(null,"psql","psql",-591812834),cljs.core.deref.call(null,tic_tac_toe.data.data_ioc.data_store)))));

//# sourceMappingURL=state_initializerc_spec.js.map
